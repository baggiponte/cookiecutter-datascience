[project]
name = "{{ cookiecutter.package_name }}"
description = ""
authors = [
    {name = "{{ cookiecutter.full_name }}", email = "{{ cookiecutter.email }}"},
]
description = ""
license = {text = "{{ cookiecutter.license }}"}
readme = "README.md"
dynamic = ["version"]
requires-python = ">={{ cookiecutter.__py_major_minor }}"

[tool.pdm]
version = {source = "file", path = "src/{{ cookiecutter.package_name }}/__init__.py"}

[tool.pdm.build]
excludes = [".git"]
package-dir = "src"
source-includes = ["tests", "CHANGELOG.md", "LICENSE", "README.md"]

[tool.pdm.scripts]
test = "pytest"
lint = "pre-commit run --all-files"

[tool.pdm.dev-dependencies]
dev = [
    "pre-commit>=2.20.0",
    "pytest>=7.1.2",
    "pytest-cov>=3.0.0",
]
{% if cookiecutter.has_documentation == 'yes' %}

docs = [
    "sphinx>=4.4.0",
    "numpydoc>=1.2",
]

{% endif %}
{% if cookiecutter.use_jupyter == 'yes' %}
jupyter = [
    "jupyter>=1.0.0",
    "ipykernel>=6.17.1",
]

{% endif %}
[tool.ruff]
line-length = 88
# numpy-docs
extend-select = ["D"]
extend-ignore = [
    "D107",
    "D203",
    "D212",
    "D213",
    "D402",
    "D413",
    "D415",
    "D416",
    "D417",
]

[tool.docformatter]
recursive = true
wrap-summaries = 75 
wrap-descriptions = 75 
close-quotes-on-newline = true

[tool.pytest.ini_options]
testpaths = "tests"
pythonpath = "src"

[tool.pyright]
exclude = [ ".venv" ]
venvPath = "."
venv = ".venv"
